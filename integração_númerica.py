# -*- coding: utf-8 -*-
"""Integração Númerica.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C1vMr-GNWq62yfZdzQwKQApDsJ25ikcb
"""

#erro max =< (n * h^3  * M )/12 < 10^-4
#M = max |f''(x)| , x pertence a [0,1] , h = limite superior - limite inferior / n, ou seja, (1-0)/n
import math

n = 41  #41 sub-intervalos
a = 0 #limite inferior
b = 1 #limite superior
#tam = len(n+1)
def f(x):
  f = math.exp(x)**-2
  return f

def integralnum():
    h = (b - a) / n
    ftotal = f(a) + f(b)  # Adicionando os valores da função nos extremos

    for i in range(1, n):  # Começamos de 1 porque já adicionamos os extremos
        x_i = a + i * h
        ftotal += 2 * f(x_i)  # Multiplicamos por 2 porque estes pontos são contados duas vezes

    resultado = (h / 2) * ftotal
    return resultado

resultado = integralnum()
print(resultado)

"""Calcule a integral definida de de e^-x^2 no intervalo [0,1]  

com erro menor que 10^−4

Use a Regra dos Trapézios Repetida
Use a expressão do erro máximo para determinar a quantidade de sub-intervalos a ser utilizada.
Efetue o cálculo da integral usando um código.
"""